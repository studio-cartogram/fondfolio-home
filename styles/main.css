/**
 * Greys
 */
/**
 * Main Colours
 */
/**
 * Other Colours
 */
/**
 * Theme 
 */
/**
 * Input
 */
/**
 * Button
 */
/**
 * Icon
 */
/**
 * Main
 */
/**
 * Notifications
 */
/**
 *  Header
 */
/**
 * Footer 
 */
/**
 *  Pagination
 */
/**
 *  Progress
 */
/**
 * Add Project Specific Indexes
 */
/**
 * $modal-elements: append($modal-elements, close-button);
 * $elements: insert-nth($elements, sidebar-filters, 3);
 *
 * .modal .close-button {
 *    z-index: index($modal-elements, close-button);
 * }
 * .sidebar-filter {
 *    z-index: index($elements, sidebar-filter);
 * }
 */
/**
 * Foundation for Sites by ZURB
 * Version 6.2.0
 * foundation.zurb.com
 * Licensed under MIT Open Source
 */
body {
  font-family: "Karla", sans-serif;
}

p {
  margin: 0 0 1.25rem;
}

h1, .alpha {
  font-size: 1.375rem;
}

h2, .beta {
  font-size: 1.25rem;
}

h3, .gamma {
  font-size: 1.125rem;
}

h4, .delta {
  font-size: 1rem;
}

h5, .epsilon {
  font-size: 0.875rem;
}

h6, .zeta {
  font-size: 0.75rem;
}

@media screen and (min-width: 40em) {
  h1, .alpha {
    font-size: 2rem;
  }
  h2, .beta {
    font-size: 1.875rem;
  }
  h3, .gamma {
    font-size: 1.125rem;
  }
  h4, .delta {
    font-size: 1rem;
  }
  h5, .epsilon {
    font-size: 0.875rem;
  }
  h6, .zeta {
    font-size: 0.875rem;
  }
}

h1, .alpha,
h2,
.beta,
h3,
.gamma,
h4,
.delta,
h5,
.epsilon,
h6,
.zeta {
  line-height: 1.65;
  font-weight: 400;
  margin: 0 0 1.25rem;
  padding: 0;
}

h1, .alpha {
  font-family: "Karla", sans-serif;
}

h2, .beta {
  font-family: "Merriweather", serif;
  color: #736E6E;
}

h3, .gamma {
  font-family: "Merriweather", serif;
  color: #341717;
  font-weight: 700;
}

h4, .delta {
  font-family: "Karla", sans-serif;
  color: #341717;
  font-weight: 700;
}

h5, .epsilon {
  font-family: "Karla", sans-serif;
  font-weight: 700;
  letter-spacing: 0.0625rem;
  text-transform: uppercase;
}

h6, .zeta {
  font-family: "Karla", sans-serif;
  font-weight: 700;
}

.p--, .p-- p {
  font-size: 0.875rem;
}

.p--medium, .p--medium p {
  font-size: 0.875rem;
}

.p--small, .p--small p {
  font-size: 0.75rem;
}

.p--large, input,
textarea, .p--large p, input p,
textarea p {
  font-size: 0.875rem;
}

.p--xlarge, .p--xlarge p {
  font-size: 1.125rem;
}

@media screen and (min-width: 40em) {
  .p--, .p-- p {
    font-size: 1rem;
  }
  .p--medium, .p--medium p {
    font-size: 1.125rem;
  }
  .p--small, .p--small p {
    font-size: 0.75rem;
  }
  .p--large, input,
  textarea, .p--large p, input p,
  textarea p {
    font-size: 1rem;
  }
  .p--xlarge, .p--xlarge p {
    font-size: 1.125rem;
  }
}

p {
  font-family: "Karla", sans-serif;
  color: #736E6E;
  line-height: 1.65;
}

p em {
  font-family: "Merriweather", serif;
  font-size: 85%;
}

.p--xlarge {
  color: #341717;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

@media screen and (min-width: 40em) {
  .text-left--medium {
    text-align: left;
  }
  .text-right--medium {
    text-align: right;
  }
  .text-center--medium {
    text-align: center;
  }
  .text-justify--medium {
    text-align: justify;
  }
}

@media screen and (min-width: 64em) {
  .text-left--large {
    text-align: left;
  }
  .text-right--large {
    text-align: right;
  }
  .text-center--large {
    text-align: center;
  }
  .text-justify--large {
    text-align: justify;
  }
}

.emphasis {
  font-style: italic;
}

.strong {
  font-weight: 700;
}

.ellipsis {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
   * 1. Set default font family to sans-serif.
   * 2. Prevent iOS and IE text size adjust after device orientation change,
   *    without disabling user zoom.
   */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
   * Remove default margin.
   */
body {
  margin: 0;
}

/* HTML5 display definitions
     ========================================================================== */
/**
   * Correct `block` display not defined for any HTML5 element in IE 8/9.
   * Correct `block` display not defined for `details` or `summary` in IE 10/11
   * and Firefox.
   * Correct `block` display not defined for `main` in IE 11.
   */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
   * 1. Correct `inline-block` display not defined in IE 8/9.
   * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
   */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
   * Prevent modern browsers from displaying `audio` without controls.
   * Remove excess height in iOS 5 devices.
   */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
   * Address `[hidden]` styling not present in IE 8/9/10.
   * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
   */
[hidden],
template {
  display: none;
}

/* Links
     ========================================================================== */
/**
   * Remove the gray background color from active links in IE 10.
   */
a {
  background-color: transparent;
}

/**
   * Improve readability of focused elements when they are also in an
   * active/hover state.
   */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
     ========================================================================== */
/**
   * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
   */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
   * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
   */
b,
strong {
  font-weight: bold;
}

/**
   * Address styling not present in Safari and Chrome.
   */
dfn {
  font-style: italic;
}

/**
   * Address variable `h1` font-size and margin within `section` and `article`
   * contexts in Firefox 4+, Safari, and Chrome.
   */
h1, .alpha {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
   * Address styling not present in IE 8/9.
   */
mark {
  background: #ff0;
  color: #000;
}

/**
   * Address inconsistent and variable font size in all browsers.
   */
small {
  font-size: 80%;
}

/**
   * Prevent `sub` and `sup` affecting `line-height` in all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
     ========================================================================== */
/**
   * Remove border when inside `a` element in IE 8/9/10.
   */
img {
  border: 0;
}

/**
   * Correct overflow not hidden in IE 9/10/11.
   */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
     ========================================================================== */
/**
   * Address margin not present in IE 8/9 and Safari.
   */
figure {
  margin: 1em 40px;
}

/**
   * Address differences between Firefox and other browsers.
   */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
   * Contain overflow in all browsers.
   */
pre {
  overflow: auto;
}

/**
   * Address odd `em`-unit font size rendering in all browsers.
   */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
     ========================================================================== */
/**
   * Known limitation: by default, Chrome and Safari on OS X allow very limited
   * styling of `select`, unless a `border` property is set.
   */
/**
   * 1. Correct color not being inherited.
   *    Known issue: affects color of disabled elements.
   * 2. Correct font properties not being inherited.
   * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
   */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
   * Address `overflow` set to `hidden` in IE 8/9/10/11.
   */
button {
  overflow: visible;
}

/**
   * Address inconsistent `text-transform` inheritance for `button` and `select`.
   * All other form control elements do not inherit `text-transform` values.
   * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
   * Correct `select` style inheritance in Firefox.
   */
button,
select {
  text-transform: none;
}

/**
   * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
   *    and `video` controls.
   * 2. Correct inability to style clickable `input` types in iOS.
   * 3. Improve usability and consistency of cursor style between image-type
   *    `input` and others.
   */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
   * Re-set default cursor for disabled elements.
   */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
   * Remove inner padding and border in Firefox 4+.
   */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
   * Address Firefox 4+ setting `line-height` on `input` using `!important` in
   * the UA stylesheet.
   */
input {
  line-height: normal;
}

/**
   * It's recommended that you don't attempt to style these elements.
   * Firefox's implementation doesn't respect box-sizing, padding, or width.
   *
   * 1. Address box sizing set to `content-box` in IE 8/9/10.
   * 2. Remove excess padding in IE 8/9/10.
   */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
   * Fix the cursor style for Chrome's increment/decrement buttons. For certain
   * `font-size` values of the `input`, it causes the cursor style of the
   * decrement button to change from `default` to `text`.
   */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
   * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
   * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
   */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
   * Remove inner padding and search cancel button in Safari and Chrome on OS X.
   * Safari (but not Chrome) clips the cancel button when the search input has
   * padding (and `textfield` appearance).
   */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
   * Define consistent border, margin, and padding.
   * [NOTE] We don't enable this ruleset in Foundation, because we want the <fieldset> element to have plain styling.
   */
/* fieldset {
    border: 1px solid #c0c0c0;
    margin: 0 2px;
    padding: 0.35em 0.625em 0.75em;
  } */
/**
   * 1. Correct `color` not being inherited in IE 8/9/10/11.
   * 2. Remove padding so people aren't caught out if they zero out fieldsets.
   */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
   * Remove default vertical scrollbar in IE 8/9/10/11.
   */
textarea {
  overflow: auto;
}

/**
   * Don't inherit the `font-weight` (applied by a rule above).
   * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
   */
optgroup {
  font-weight: bold;
}

/* Tables
     ========================================================================== */
/**
   * Remove most spacing between table cells.
   */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

.foundation-mq {
  font-family: "small=0em&medium=40em&large=64em&xlarge=75em&xxlarge=90em";
}

html {
  font-size: 100%;
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  padding: 0;
  margin: 0;
  font-family: "Helvetica Neue", Helvetica, Roboto, Arial, sans-serif;
  font-weight: normal;
  line-height: 1.5;
  color: #0a0a0a;
  background: #fefefe;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

img {
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
  display: inline-block;
  vertical-align: middle;
}

textarea {
  height: auto;
  min-height: 50px;
  border-radius: 0;
}

select {
  width: 100%;
  border-radius: 0;
}

#map_canvas img,
#map_canvas embed,
#map_canvas object,
.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object {
  max-width: none !important;
}

button {
  -webkit-appearance: none;
  -moz-appearance: none;
  background: transparent;
  padding: 0;
  border: 0;
  border-radius: 0;
  line-height: 1;
}

.is-visible {
  display: block !important;
}

.is-hidden {
  display: none !important;
}

.align-right {
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.align-center {
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.align-justify {
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.align-spaced {
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
}

.align-top {
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
              -ms-grid-row-align: flex-start;
          align-items: flex-start;
}

.align-self-top {
  -webkit-align-self: flex-start;
      -ms-flex-item-align: start;
          align-self: flex-start;
}

.align-bottom {
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
              -ms-grid-row-align: flex-end;
          align-items: flex-end;
}

.align-self-bottom {
  -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
          align-self: flex-end;
}

.align-middle {
  -webkit-align-items: center;
      -ms-flex-align: center;
              -ms-grid-row-align: center;
          align-items: center;
}

.align-self-middle {
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
}

.align-stretch {
  -webkit-align-items: stretch;
      -ms-flex-align: stretch;
              -ms-grid-row-align: stretch;
          align-items: stretch;
}

.align-self-stretch {
  -webkit-align-self: stretch;
      -ms-flex-item-align: stretch;
          align-self: stretch;
}

.small {
  -webkit-order: 1;
      -ms-flex-order: 1;
          order: 1;
}

.small {
  -webkit-order: 2;
      -ms-flex-order: 2;
          order: 2;
}

.small {
  -webkit-order: 3;
      -ms-flex-order: 3;
          order: 3;
}

.small {
  -webkit-order: 4;
      -ms-flex-order: 4;
          order: 4;
}

.small {
  -webkit-order: 5;
      -ms-flex-order: 5;
          order: 5;
}

.small {
  -webkit-order: 6;
      -ms-flex-order: 6;
          order: 6;
}

@media screen and (min-width: 40em) {
  .medium {
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1;
  }
  .medium {
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2;
  }
  .medium {
    -webkit-order: 3;
        -ms-flex-order: 3;
            order: 3;
  }
  .medium {
    -webkit-order: 4;
        -ms-flex-order: 4;
            order: 4;
  }
  .medium {
    -webkit-order: 5;
        -ms-flex-order: 5;
            order: 5;
  }
  .medium {
    -webkit-order: 6;
        -ms-flex-order: 6;
            order: 6;
  }
}

@media screen and (min-width: 64em) {
  .large {
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1;
  }
  .large {
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2;
  }
  .large {
    -webkit-order: 3;
        -ms-flex-order: 3;
            order: 3;
  }
  .large {
    -webkit-order: 4;
        -ms-flex-order: 4;
            order: 4;
  }
  .large {
    -webkit-order: 5;
        -ms-flex-order: 5;
            order: 5;
  }
  .large {
    -webkit-order: 6;
        -ms-flex-order: 6;
            order: 6;
  }
}

.row {
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
}

.row .row {
  margin-left: -0.625rem;
  margin-right: -0.625rem;
}

@media screen and (min-width: 40em) {
  .row .row {
    margin-left: -0.46875rem;
    margin-right: -0.46875rem;
  }
}

.row.expanded {
  max-width: none;
}

.row.collapse > .column, .row.collapse > .columns {
  padding-left: 0;
  padding-right: 0;
}

.column, .columns {
  -webkit-flex: 1 1 0px;
      -ms-flex: 1 1 0px;
          flex: 1 1 0px;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

@media screen and (min-width: 40em) {
  .column, .columns {
    padding-left: 0.46875rem;
    padding-right: 0.46875rem;
  }
}

.column.row.row, .row.row.columns {
  float: none;
}

.row .column.row.row, .row .row.row.columns {
  padding-left: 0;
  padding-right: 0;
  margin-left: 0;
  margin-right: 0;
}

.small-1 {
  -webkit-flex: 0 0 8.3333333333%;
      -ms-flex: 0 0 8.3333333333%;
          flex: 0 0 8.3333333333%;
  max-width: 8.3333333333%;
}

.small-offset-0 {
  margin-left: 0%;
}

.small-2 {
  -webkit-flex: 0 0 16.6666666667%;
      -ms-flex: 0 0 16.6666666667%;
          flex: 0 0 16.6666666667%;
  max-width: 16.6666666667%;
}

.small-offset-1 {
  margin-left: 8.3333333333%;
}

.small-3 {
  -webkit-flex: 0 0 25%;
      -ms-flex: 0 0 25%;
          flex: 0 0 25%;
  max-width: 25%;
}

.small-offset-2 {
  margin-left: 16.6666666667%;
}

.small-4 {
  -webkit-flex: 0 0 33.3333333333%;
      -ms-flex: 0 0 33.3333333333%;
          flex: 0 0 33.3333333333%;
  max-width: 33.3333333333%;
}

.small-offset-3 {
  margin-left: 25%;
}

.small-5 {
  -webkit-flex: 0 0 41.6666666667%;
      -ms-flex: 0 0 41.6666666667%;
          flex: 0 0 41.6666666667%;
  max-width: 41.6666666667%;
}

.small-offset-4 {
  margin-left: 33.3333333333%;
}

.small-6 {
  -webkit-flex: 0 0 50%;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  max-width: 50%;
}

.small-offset-5 {
  margin-left: 41.6666666667%;
}

.small-7 {
  -webkit-flex: 0 0 58.3333333333%;
      -ms-flex: 0 0 58.3333333333%;
          flex: 0 0 58.3333333333%;
  max-width: 58.3333333333%;
}

.small-offset-6 {
  margin-left: 50%;
}

.small-8 {
  -webkit-flex: 0 0 66.6666666667%;
      -ms-flex: 0 0 66.6666666667%;
          flex: 0 0 66.6666666667%;
  max-width: 66.6666666667%;
}

.small-offset-7 {
  margin-left: 58.3333333333%;
}

.small-9 {
  -webkit-flex: 0 0 75%;
      -ms-flex: 0 0 75%;
          flex: 0 0 75%;
  max-width: 75%;
}

.small-offset-8 {
  margin-left: 66.6666666667%;
}

.small-10 {
  -webkit-flex: 0 0 83.3333333333%;
      -ms-flex: 0 0 83.3333333333%;
          flex: 0 0 83.3333333333%;
  max-width: 83.3333333333%;
}

.small-offset-9 {
  margin-left: 75%;
}

.small-11 {
  -webkit-flex: 0 0 91.6666666667%;
      -ms-flex: 0 0 91.6666666667%;
          flex: 0 0 91.6666666667%;
  max-width: 91.6666666667%;
}

.small-offset-10 {
  margin-left: 83.3333333333%;
}

.small-12 {
  -webkit-flex: 0 0 100%;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  max-width: 100%;
}

.small-offset-11 {
  margin-left: 91.6666666667%;
}

.small-order-1 {
  -webkit-order: 1;
      -ms-flex-order: 1;
          order: 1;
}

.small-up-1 {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.small-up-1 > .column, .small-up-1 > .columns {
  -webkit-flex: 0 0 100%;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  max-width: 100%;
}

.small-order-2 {
  -webkit-order: 2;
      -ms-flex-order: 2;
          order: 2;
}

.small-up-2 {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.small-up-2 > .column, .small-up-2 > .columns {
  -webkit-flex: 0 0 50%;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  max-width: 50%;
}

.small-order-3 {
  -webkit-order: 3;
      -ms-flex-order: 3;
          order: 3;
}

.small-up-3 {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.small-up-3 > .column, .small-up-3 > .columns {
  -webkit-flex: 0 0 33.3333333333%;
      -ms-flex: 0 0 33.3333333333%;
          flex: 0 0 33.3333333333%;
  max-width: 33.3333333333%;
}

.small-order-4 {
  -webkit-order: 4;
      -ms-flex-order: 4;
          order: 4;
}

.small-up-4 {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.small-up-4 > .column, .small-up-4 > .columns {
  -webkit-flex: 0 0 25%;
      -ms-flex: 0 0 25%;
          flex: 0 0 25%;
  max-width: 25%;
}

.small-order-5 {
  -webkit-order: 5;
      -ms-flex-order: 5;
          order: 5;
}

.small-up-5 {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.small-up-5 > .column, .small-up-5 > .columns {
  -webkit-flex: 0 0 20%;
      -ms-flex: 0 0 20%;
          flex: 0 0 20%;
  max-width: 20%;
}

.small-order-6 {
  -webkit-order: 6;
      -ms-flex-order: 6;
          order: 6;
}

.small-up-6 {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.small-up-6 > .column, .small-up-6 > .columns {
  -webkit-flex: 0 0 16.6666666667%;
      -ms-flex: 0 0 16.6666666667%;
          flex: 0 0 16.6666666667%;
  max-width: 16.6666666667%;
}

.small-up-1 > .column, .small-up-1 > .columns {
  width: 100%;
  float: left;
}

.small-up-1 > .column:nth-of-type(1n), .small-up-1 > .columns:nth-of-type(1n) {
  clear: none;
}

.small-up-1 > .column:nth-of-type(1n+1), .small-up-1 > .columns:nth-of-type(1n+1) {
  clear: both;
}

.small-up-1 > .column:last-child, .small-up-1 > .columns:last-child {
  float: left;
}

.small-up-2 > .column, .small-up-2 > .columns {
  width: 50%;
  float: left;
}

.small-up-2 > .column:nth-of-type(1n), .small-up-2 > .columns:nth-of-type(1n) {
  clear: none;
}

.small-up-2 > .column:nth-of-type(2n+1), .small-up-2 > .columns:nth-of-type(2n+1) {
  clear: both;
}

.small-up-2 > .column:last-child, .small-up-2 > .columns:last-child {
  float: left;
}

.small-up-3 > .column, .small-up-3 > .columns {
  width: 33.3333333333%;
  float: left;
}

.small-up-3 > .column:nth-of-type(1n), .small-up-3 > .columns:nth-of-type(1n) {
  clear: none;
}

.small-up-3 > .column:nth-of-type(3n+1), .small-up-3 > .columns:nth-of-type(3n+1) {
  clear: both;
}

.small-up-3 > .column:last-child, .small-up-3 > .columns:last-child {
  float: left;
}

.small-up-4 > .column, .small-up-4 > .columns {
  width: 25%;
  float: left;
}

.small-up-4 > .column:nth-of-type(1n), .small-up-4 > .columns:nth-of-type(1n) {
  clear: none;
}

.small-up-4 > .column:nth-of-type(4n+1), .small-up-4 > .columns:nth-of-type(4n+1) {
  clear: both;
}

.small-up-4 > .column:last-child, .small-up-4 > .columns:last-child {
  float: left;
}

.small-up-5 > .column, .small-up-5 > .columns {
  width: 20%;
  float: left;
}

.small-up-5 > .column:nth-of-type(1n), .small-up-5 > .columns:nth-of-type(1n) {
  clear: none;
}

.small-up-5 > .column:nth-of-type(5n+1), .small-up-5 > .columns:nth-of-type(5n+1) {
  clear: both;
}

.small-up-5 > .column:last-child, .small-up-5 > .columns:last-child {
  float: left;
}

.small-up-6 > .column, .small-up-6 > .columns {
  width: 16.6666666667%;
  float: left;
}

.small-up-6 > .column:nth-of-type(1n), .small-up-6 > .columns:nth-of-type(1n) {
  clear: none;
}

.small-up-6 > .column:nth-of-type(6n+1), .small-up-6 > .columns:nth-of-type(6n+1) {
  clear: both;
}

.small-up-6 > .column:last-child, .small-up-6 > .columns:last-child {
  float: left;
}

.small-up-7 > .column, .small-up-7 > .columns {
  width: 14.2857142857%;
  float: left;
}

.small-up-7 > .column:nth-of-type(1n), .small-up-7 > .columns:nth-of-type(1n) {
  clear: none;
}

.small-up-7 > .column:nth-of-type(7n+1), .small-up-7 > .columns:nth-of-type(7n+1) {
  clear: both;
}

.small-up-7 > .column:last-child, .small-up-7 > .columns:last-child {
  float: left;
}

.small-up-8 > .column, .small-up-8 > .columns {
  width: 12.5%;
  float: left;
}

.small-up-8 > .column:nth-of-type(1n), .small-up-8 > .columns:nth-of-type(1n) {
  clear: none;
}

.small-up-8 > .column:nth-of-type(8n+1), .small-up-8 > .columns:nth-of-type(8n+1) {
  clear: both;
}

.small-up-8 > .column:last-child, .small-up-8 > .columns:last-child {
  float: left;
}

.small-collapse > .column, .small-collapse > .columns {
  padding-left: 0;
  padding-right: 0;
}

.small-uncollapse > .column, .small-uncollapse > .columns {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

@media screen and (min-width: 40em) {
  .medium-1 {
    -webkit-flex: 0 0 8.3333333333%;
        -ms-flex: 0 0 8.3333333333%;
            flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .medium-offset-0 {
    margin-left: 0%;
  }
  .medium-2 {
    -webkit-flex: 0 0 16.6666666667%;
        -ms-flex: 0 0 16.6666666667%;
            flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .medium-offset-1 {
    margin-left: 8.3333333333%;
  }
  .medium-3 {
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    max-width: 25%;
  }
  .medium-offset-2 {
    margin-left: 16.6666666667%;
  }
  .medium-4 {
    -webkit-flex: 0 0 33.3333333333%;
        -ms-flex: 0 0 33.3333333333%;
            flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .medium-offset-3 {
    margin-left: 25%;
  }
  .medium-5 {
    -webkit-flex: 0 0 41.6666666667%;
        -ms-flex: 0 0 41.6666666667%;
            flex: 0 0 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .medium-offset-4 {
    margin-left: 33.3333333333%;
  }
  .medium-6 {
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    max-width: 50%;
  }
  .medium-offset-5 {
    margin-left: 41.6666666667%;
  }
  .medium-7 {
    -webkit-flex: 0 0 58.3333333333%;
        -ms-flex: 0 0 58.3333333333%;
            flex: 0 0 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .medium-offset-6 {
    margin-left: 50%;
  }
  .medium-8 {
    -webkit-flex: 0 0 66.6666666667%;
        -ms-flex: 0 0 66.6666666667%;
            flex: 0 0 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .medium-offset-7 {
    margin-left: 58.3333333333%;
  }
  .medium-9 {
    -webkit-flex: 0 0 75%;
        -ms-flex: 0 0 75%;
            flex: 0 0 75%;
    max-width: 75%;
  }
  .medium-offset-8 {
    margin-left: 66.6666666667%;
  }
  .medium-10 {
    -webkit-flex: 0 0 83.3333333333%;
        -ms-flex: 0 0 83.3333333333%;
            flex: 0 0 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .medium-offset-9 {
    margin-left: 75%;
  }
  .medium-11 {
    -webkit-flex: 0 0 91.6666666667%;
        -ms-flex: 0 0 91.6666666667%;
            flex: 0 0 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .medium-offset-10 {
    margin-left: 83.3333333333%;
  }
  .medium-12 {
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    max-width: 100%;
  }
  .medium-offset-11 {
    margin-left: 91.6666666667%;
  }
  .medium-order-1 {
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1;
  }
  .medium-up-1 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .medium-up-1 > .column, .medium-up-1 > .columns {
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    max-width: 100%;
  }
  .medium-order-2 {
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2;
  }
  .medium-up-2 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .medium-up-2 > .column, .medium-up-2 > .columns {
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    max-width: 50%;
  }
  .medium-order-3 {
    -webkit-order: 3;
        -ms-flex-order: 3;
            order: 3;
  }
  .medium-up-3 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .medium-up-3 > .column, .medium-up-3 > .columns {
    -webkit-flex: 0 0 33.3333333333%;
        -ms-flex: 0 0 33.3333333333%;
            flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .medium-order-4 {
    -webkit-order: 4;
        -ms-flex-order: 4;
            order: 4;
  }
  .medium-up-4 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .medium-up-4 > .column, .medium-up-4 > .columns {
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    max-width: 25%;
  }
  .medium-order-5 {
    -webkit-order: 5;
        -ms-flex-order: 5;
            order: 5;
  }
  .medium-up-5 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .medium-up-5 > .column, .medium-up-5 > .columns {
    -webkit-flex: 0 0 20%;
        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    max-width: 20%;
  }
  .medium-order-6 {
    -webkit-order: 6;
        -ms-flex-order: 6;
            order: 6;
  }
  .medium-up-6 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .medium-up-6 > .column, .medium-up-6 > .columns {
    -webkit-flex: 0 0 16.6666666667%;
        -ms-flex: 0 0 16.6666666667%;
            flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .medium-up-1 > .column, .medium-up-1 > .columns {
    width: 100%;
    float: left;
  }
  .medium-up-1 > .column:nth-of-type(1n), .medium-up-1 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .medium-up-1 > .column:nth-of-type(1n+1), .medium-up-1 > .columns:nth-of-type(1n+1) {
    clear: both;
  }
  .medium-up-1 > .column:last-child, .medium-up-1 > .columns:last-child {
    float: left;
  }
  .medium-up-2 > .column, .medium-up-2 > .columns {
    width: 50%;
    float: left;
  }
  .medium-up-2 > .column:nth-of-type(1n), .medium-up-2 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .medium-up-2 > .column:nth-of-type(2n+1), .medium-up-2 > .columns:nth-of-type(2n+1) {
    clear: both;
  }
  .medium-up-2 > .column:last-child, .medium-up-2 > .columns:last-child {
    float: left;
  }
  .medium-up-3 > .column, .medium-up-3 > .columns {
    width: 33.3333333333%;
    float: left;
  }
  .medium-up-3 > .column:nth-of-type(1n), .medium-up-3 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .medium-up-3 > .column:nth-of-type(3n+1), .medium-up-3 > .columns:nth-of-type(3n+1) {
    clear: both;
  }
  .medium-up-3 > .column:last-child, .medium-up-3 > .columns:last-child {
    float: left;
  }
  .medium-up-4 > .column, .medium-up-4 > .columns {
    width: 25%;
    float: left;
  }
  .medium-up-4 > .column:nth-of-type(1n), .medium-up-4 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .medium-up-4 > .column:nth-of-type(4n+1), .medium-up-4 > .columns:nth-of-type(4n+1) {
    clear: both;
  }
  .medium-up-4 > .column:last-child, .medium-up-4 > .columns:last-child {
    float: left;
  }
  .medium-up-5 > .column, .medium-up-5 > .columns {
    width: 20%;
    float: left;
  }
  .medium-up-5 > .column:nth-of-type(1n), .medium-up-5 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .medium-up-5 > .column:nth-of-type(5n+1), .medium-up-5 > .columns:nth-of-type(5n+1) {
    clear: both;
  }
  .medium-up-5 > .column:last-child, .medium-up-5 > .columns:last-child {
    float: left;
  }
  .medium-up-6 > .column, .medium-up-6 > .columns {
    width: 16.6666666667%;
    float: left;
  }
  .medium-up-6 > .column:nth-of-type(1n), .medium-up-6 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .medium-up-6 > .column:nth-of-type(6n+1), .medium-up-6 > .columns:nth-of-type(6n+1) {
    clear: both;
  }
  .medium-up-6 > .column:last-child, .medium-up-6 > .columns:last-child {
    float: left;
  }
  .medium-up-7 > .column, .medium-up-7 > .columns {
    width: 14.2857142857%;
    float: left;
  }
  .medium-up-7 > .column:nth-of-type(1n), .medium-up-7 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .medium-up-7 > .column:nth-of-type(7n+1), .medium-up-7 > .columns:nth-of-type(7n+1) {
    clear: both;
  }
  .medium-up-7 > .column:last-child, .medium-up-7 > .columns:last-child {
    float: left;
  }
  .medium-up-8 > .column, .medium-up-8 > .columns {
    width: 12.5%;
    float: left;
  }
  .medium-up-8 > .column:nth-of-type(1n), .medium-up-8 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .medium-up-8 > .column:nth-of-type(8n+1), .medium-up-8 > .columns:nth-of-type(8n+1) {
    clear: both;
  }
  .medium-up-8 > .column:last-child, .medium-up-8 > .columns:last-child {
    float: left;
  }
}

@media screen and (min-width: 40em) and (min-width: 40em) {
  .medium-expand {
    -webkit-flex: 1 1 0px;
        -ms-flex: 1 1 0px;
            flex: 1 1 0px;
  }
}

.row.medium-unstack .column, .row.medium-unstack .columns {
  -webkit-flex: 0 0 100%;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
}

@media screen and (min-width: 40em) {
  .row.medium-unstack .column, .row.medium-unstack .columns {
    -webkit-flex: 1 1 0px;
        -ms-flex: 1 1 0px;
            flex: 1 1 0px;
  }
}

@media screen and (min-width: 40em) {
  .medium-collapse > .column, .medium-collapse > .columns {
    padding-left: 0;
    padding-right: 0;
  }
  .medium-uncollapse > .column, .medium-uncollapse > .columns {
    padding-left: 0.46875rem;
    padding-right: 0.46875rem;
  }
}

@media screen and (min-width: 64em) {
  .large-1 {
    -webkit-flex: 0 0 8.3333333333%;
        -ms-flex: 0 0 8.3333333333%;
            flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .large-offset-0 {
    margin-left: 0%;
  }
  .large-2 {
    -webkit-flex: 0 0 16.6666666667%;
        -ms-flex: 0 0 16.6666666667%;
            flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .large-offset-1 {
    margin-left: 8.3333333333%;
  }
  .large-3 {
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    max-width: 25%;
  }
  .large-offset-2 {
    margin-left: 16.6666666667%;
  }
  .large-4 {
    -webkit-flex: 0 0 33.3333333333%;
        -ms-flex: 0 0 33.3333333333%;
            flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .large-offset-3 {
    margin-left: 25%;
  }
  .large-5 {
    -webkit-flex: 0 0 41.6666666667%;
        -ms-flex: 0 0 41.6666666667%;
            flex: 0 0 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .large-offset-4 {
    margin-left: 33.3333333333%;
  }
  .large-6 {
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    max-width: 50%;
  }
  .large-offset-5 {
    margin-left: 41.6666666667%;
  }
  .large-7 {
    -webkit-flex: 0 0 58.3333333333%;
        -ms-flex: 0 0 58.3333333333%;
            flex: 0 0 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .large-offset-6 {
    margin-left: 50%;
  }
  .large-8 {
    -webkit-flex: 0 0 66.6666666667%;
        -ms-flex: 0 0 66.6666666667%;
            flex: 0 0 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .large-offset-7 {
    margin-left: 58.3333333333%;
  }
  .large-9 {
    -webkit-flex: 0 0 75%;
        -ms-flex: 0 0 75%;
            flex: 0 0 75%;
    max-width: 75%;
  }
  .large-offset-8 {
    margin-left: 66.6666666667%;
  }
  .large-10 {
    -webkit-flex: 0 0 83.3333333333%;
        -ms-flex: 0 0 83.3333333333%;
            flex: 0 0 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .large-offset-9 {
    margin-left: 75%;
  }
  .large-11 {
    -webkit-flex: 0 0 91.6666666667%;
        -ms-flex: 0 0 91.6666666667%;
            flex: 0 0 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .large-offset-10 {
    margin-left: 83.3333333333%;
  }
  .large-12 {
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    max-width: 100%;
  }
  .large-offset-11 {
    margin-left: 91.6666666667%;
  }
  .large-order-1 {
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1;
  }
  .large-up-1 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .large-up-1 > .column, .large-up-1 > .columns {
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    max-width: 100%;
  }
  .large-order-2 {
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2;
  }
  .large-up-2 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .large-up-2 > .column, .large-up-2 > .columns {
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    max-width: 50%;
  }
  .large-order-3 {
    -webkit-order: 3;
        -ms-flex-order: 3;
            order: 3;
  }
  .large-up-3 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .large-up-3 > .column, .large-up-3 > .columns {
    -webkit-flex: 0 0 33.3333333333%;
        -ms-flex: 0 0 33.3333333333%;
            flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .large-order-4 {
    -webkit-order: 4;
        -ms-flex-order: 4;
            order: 4;
  }
  .large-up-4 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .large-up-4 > .column, .large-up-4 > .columns {
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    max-width: 25%;
  }
  .large-order-5 {
    -webkit-order: 5;
        -ms-flex-order: 5;
            order: 5;
  }
  .large-up-5 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .large-up-5 > .column, .large-up-5 > .columns {
    -webkit-flex: 0 0 20%;
        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    max-width: 20%;
  }
  .large-order-6 {
    -webkit-order: 6;
        -ms-flex-order: 6;
            order: 6;
  }
  .large-up-6 {
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
  }
  .large-up-6 > .column, .large-up-6 > .columns {
    -webkit-flex: 0 0 16.6666666667%;
        -ms-flex: 0 0 16.6666666667%;
            flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .large-up-1 > .column, .large-up-1 > .columns {
    width: 100%;
    float: left;
  }
  .large-up-1 > .column:nth-of-type(1n), .large-up-1 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .large-up-1 > .column:nth-of-type(1n+1), .large-up-1 > .columns:nth-of-type(1n+1) {
    clear: both;
  }
  .large-up-1 > .column:last-child, .large-up-1 > .columns:last-child {
    float: left;
  }
  .large-up-2 > .column, .large-up-2 > .columns {
    width: 50%;
    float: left;
  }
  .large-up-2 > .column:nth-of-type(1n), .large-up-2 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .large-up-2 > .column:nth-of-type(2n+1), .large-up-2 > .columns:nth-of-type(2n+1) {
    clear: both;
  }
  .large-up-2 > .column:last-child, .large-up-2 > .columns:last-child {
    float: left;
  }
  .large-up-3 > .column, .large-up-3 > .columns {
    width: 33.3333333333%;
    float: left;
  }
  .large-up-3 > .column:nth-of-type(1n), .large-up-3 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .large-up-3 > .column:nth-of-type(3n+1), .large-up-3 > .columns:nth-of-type(3n+1) {
    clear: both;
  }
  .large-up-3 > .column:last-child, .large-up-3 > .columns:last-child {
    float: left;
  }
  .large-up-4 > .column, .large-up-4 > .columns {
    width: 25%;
    float: left;
  }
  .large-up-4 > .column:nth-of-type(1n), .large-up-4 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .large-up-4 > .column:nth-of-type(4n+1), .large-up-4 > .columns:nth-of-type(4n+1) {
    clear: both;
  }
  .large-up-4 > .column:last-child, .large-up-4 > .columns:last-child {
    float: left;
  }
  .large-up-5 > .column, .large-up-5 > .columns {
    width: 20%;
    float: left;
  }
  .large-up-5 > .column:nth-of-type(1n), .large-up-5 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .large-up-5 > .column:nth-of-type(5n+1), .large-up-5 > .columns:nth-of-type(5n+1) {
    clear: both;
  }
  .large-up-5 > .column:last-child, .large-up-5 > .columns:last-child {
    float: left;
  }
  .large-up-6 > .column, .large-up-6 > .columns {
    width: 16.6666666667%;
    float: left;
  }
  .large-up-6 > .column:nth-of-type(1n), .large-up-6 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .large-up-6 > .column:nth-of-type(6n+1), .large-up-6 > .columns:nth-of-type(6n+1) {
    clear: both;
  }
  .large-up-6 > .column:last-child, .large-up-6 > .columns:last-child {
    float: left;
  }
  .large-up-7 > .column, .large-up-7 > .columns {
    width: 14.2857142857%;
    float: left;
  }
  .large-up-7 > .column:nth-of-type(1n), .large-up-7 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .large-up-7 > .column:nth-of-type(7n+1), .large-up-7 > .columns:nth-of-type(7n+1) {
    clear: both;
  }
  .large-up-7 > .column:last-child, .large-up-7 > .columns:last-child {
    float: left;
  }
  .large-up-8 > .column, .large-up-8 > .columns {
    width: 12.5%;
    float: left;
  }
  .large-up-8 > .column:nth-of-type(1n), .large-up-8 > .columns:nth-of-type(1n) {
    clear: none;
  }
  .large-up-8 > .column:nth-of-type(8n+1), .large-up-8 > .columns:nth-of-type(8n+1) {
    clear: both;
  }
  .large-up-8 > .column:last-child, .large-up-8 > .columns:last-child {
    float: left;
  }
}

@media screen and (min-width: 64em) and (min-width: 64em) {
  .large-expand {
    -webkit-flex: 1 1 0px;
        -ms-flex: 1 1 0px;
            flex: 1 1 0px;
  }
}

.row.large-unstack .column, .row.large-unstack .columns {
  -webkit-flex: 0 0 100%;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
}

@media screen and (min-width: 64em) {
  .row.large-unstack .column, .row.large-unstack .columns {
    -webkit-flex: 1 1 0px;
        -ms-flex: 1 1 0px;
            flex: 1 1 0px;
  }
}

@media screen and (min-width: 64em) {
  .large-collapse > .column, .large-collapse > .columns {
    padding-left: 0;
    padding-right: 0;
  }
  .large-uncollapse > .column, .large-uncollapse > .columns {
    padding-left: 0.46875rem;
    padding-right: 0.46875rem;
  }
}

.shrink {
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  max-width: 100%;
}

.column.align-top, .align-top.columns {
  -webkit-align-self: flex-start;
      -ms-flex-item-align: start;
          align-self: flex-start;
}

.column.align-bottom, .align-bottom.columns {
  -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
          align-self: flex-end;
}

.column.align-middle, .align-middle.columns {
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
}

.column.align-stretch, .align-stretch.columns {
  -webkit-align-self: stretch;
      -ms-flex-item-align: stretch;
          align-self: stretch;
}

.float-left {
  float: left !important;
}

.float-right {
  float: right !important;
}

.float-center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.clearfix::before, .clearfix::after {
  content: ' ';
  display: table;
  -webkit-flex-basis: 0;
      -ms-flex-preferred-size: 0;
          flex-basis: 0;
  -webkit-order: 1;
      -ms-flex-order: 1;
          order: 1;
}

.clearfix::after {
  clear: both;
}

.hide {
  display: none !important;
}

.invisible {
  visibility: hidden;
}

@media screen and (max-width: 39.9375em) {
  .hide-for-small-only {
    display: none !important;
  }
}

@media screen and (max-width: 0em), screen and (min-width: 40em) {
  .show-for-small-only {
    display: none !important;
  }
}

@media screen and (min-width: 40em) {
  .hide-for-medium {
    display: none !important;
  }
}

@media screen and (max-width: 39.9375em) {
  .show-for-medium {
    display: none !important;
  }
}

@media screen and (min-width: 40em) and (max-width: 63.9375em) {
  .hide-for-medium-only {
    display: none !important;
  }
}

@media screen and (max-width: 39.9375em), screen and (min-width: 64em) {
  .show-for-medium-only {
    display: none !important;
  }
}

@media screen and (min-width: 64em) {
  .hide-for-large {
    display: none !important;
  }
}

@media screen and (max-width: 63.9375em) {
  .show-for-large {
    display: none !important;
  }
}

@media screen and (min-width: 64em) and (max-width: 74.9375em) {
  .hide-for-large-only {
    display: none !important;
  }
}

@media screen and (max-width: 63.9375em), screen and (min-width: 75em) {
  .show-for-large-only {
    display: none !important;
  }
}

.show-for-sr,
.show-on-focus {
  position: absolute !important;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
}

.show-on-focus:active, .show-on-focus:focus {
  position: static !important;
  height: auto;
  width: auto;
  overflow: visible;
  clip: auto;
}

.show-for-landscape,
.hide-for-portrait {
  display: block !important;
}

@media screen and (orientation: landscape) {
  .show-for-landscape,
  .hide-for-portrait {
    display: block !important;
  }
}

@media screen and (orientation: portrait) {
  .show-for-landscape,
  .hide-for-portrait {
    display: none !important;
  }
}

.hide-for-landscape,
.show-for-portrait {
  display: none !important;
}

@media screen and (orientation: landscape) {
  .hide-for-landscape,
  .show-for-portrait {
    display: none !important;
  }
}

@media screen and (orientation: portrait) {
  .hide-for-landscape,
  .show-for-portrait {
    display: block !important;
  }
}

/**
 * We have a mixin to generate our background and border colors.
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
}

html,
body,
button {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
}

body {
  position: relative;
}

body::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  z-index: 9;
  display: none;
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.15) 95%, rgba(0, 0, 0, 0.15) 100%);
  background-size: 100% 26px;
}

body.debug::after {
  display: block;
  pointer-events: none;
}

.main {
  min-height: 100%;
  background: #fff;
}

/**
     * Background
     */
.background--turquoise {
  background: #06D6B3 !important;
}

/**
     * Borders
     */
.border--turquoise {
  border-color: #06D6B3;
}

.border-right--turquoise {
  border-right: 1px solid #06D6B3;
}

.border-left--turquoise {
  border-left: 1px solid #06D6B3;
}

.border-top--turquoise {
  border-top: 1px solid #06D6B3;
}

.border-bottom--turquoise {
  border-bottom: 1px solid #06D6B3;
}

/**
     * Color
     */
.color--turquoise.color--turquoise {
  color: #06D6B3;
}

.fill--turquoise.fill--turquoise {
  fill: #06D6B3;
}

/**
     * Background
     */
.background--danger {
  background: #EE5E5E !important;
}

/**
     * Borders
     */
.border--danger {
  border-color: #EE5E5E;
}

.border-right--danger {
  border-right: 1px solid #EE5E5E;
}

.border-left--danger {
  border-left: 1px solid #EE5E5E;
}

.border-top--danger {
  border-top: 1px solid #EE5E5E;
}

.border-bottom--danger {
  border-bottom: 1px solid #EE5E5E;
}

/**
     * Color
     */
.color--danger.color--danger {
  color: #EE5E5E;
}

.fill--danger.fill--danger {
  fill: #EE5E5E;
}

.make-center {
  display: block;
  margin: auto;
}

.make-circle, .button.button--circle {
  border-radius: 50% !important;
}

.make-block {
  display: block;
  width: 100%;
}

.bg {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
}

.angle--bottoms {
  border-radius: 3px 3px 0 0 !important;
}

.angle--tops {
  border-radius: 0 0 3px 3px !important;
}

.height--full {
  height: 100%;
}

.soft--small {
  padding: 1.25rem !important;
}

.soft--left--small {
  padding-left: 1.25rem !important;
}

.soft--right--small {
  padding-right: 1.25rem !important;
}

.soft--top--small {
  padding-top: 1.25rem !important;
}

.soft--bottom--small {
  padding-bottom: 1.25rem !important;
}

.push--small {
  margin: 1.25rem !important;
}

.push--bottom--small {
  margin-bottom: 1.25rem !important;
}

.hard--small {
  padding: 0 !important;
}

.flush--small {
  margin: 0 !important;
}

.flush--bottom--small {
  margin-bottom: 0 !important;
}

.soft-half--small {
  padding: 0.625rem !important;
}

.soft-half--left--small {
  padding-left: 0.625rem !important;
}

.soft-half--right--small {
  padding-right: 0.625rem !important;
}

.soft-half--top--small {
  padding-top: 0.625rem !important;
}

.soft-half--bottom--small {
  padding-bottom: 0.625rem !important;
}

.push-half--small {
  margin: 0.625rem !important;
}

.push-half--bottom--small {
  margin-bottom: 0.625rem !important;
}

.hard-half--small {
  padding: 0 !important;
}

.flush-half--small {
  margin: 0 !important;
}

.flush-half--bottom--small {
  margin-bottom: 0 !important;
}

.soft-double--small {
  padding: 2.5rem !important;
}

.soft-double--left--small {
  padding-left: 2.5rem !important;
}

.soft-double--right--small {
  padding-right: 2.5rem !important;
}

.soft-double--top--small {
  padding-top: 2.5rem !important;
}

.soft-double--bottom--small {
  padding-bottom: 2.5rem !important;
}

.push-double--small {
  margin: 2.5rem !important;
}

.push-double--bottom--small {
  margin-bottom: 2.5rem !important;
}

.hard-double--small {
  padding: 0 !important;
}

.flush-double--small {
  margin: 0 !important;
}

.flush-double--bottom--small {
  margin-bottom: 0 !important;
}

.soft-triple--small {
  padding: 3.75rem !important;
}

.soft-triple--left--small {
  padding-left: 3.75rem !important;
}

.soft-triple--right--small {
  padding-right: 3.75rem !important;
}

.soft-triple--top--small {
  padding-top: 3.75rem !important;
}

.soft-triple--bottom--small {
  padding-bottom: 3.75rem !important;
}

.push-triple--small {
  margin: 3.75rem !important;
}

.push-triple--bottom--small {
  margin-bottom: 3.75rem !important;
}

.hard-triple--small {
  padding: 0 !important;
}

.flush-triple--small {
  margin: 0 !important;
}

.flush-triple--bottom--small {
  margin-bottom: 0 !important;
}

.soft-quin--small {
  padding: 6.25rem !important;
}

.soft-quin--left--small {
  padding-left: 6.25rem !important;
}

.soft-quin--right--small {
  padding-right: 6.25rem !important;
}

.soft-quin--top--small {
  padding-top: 6.25rem !important;
}

.soft-quin--bottom--small {
  padding-bottom: 6.25rem !important;
}

.push-quin--small {
  margin: 6.25rem !important;
}

.push-quin--bottom--small {
  margin-bottom: 6.25rem !important;
}

.hard-quin--small {
  padding: 0 !important;
}

.flush-quin--small {
  margin: 0 !important;
}

.flush-quin--bottom--small {
  margin-bottom: 0 !important;
}

@media screen and (min-width: 40em) {
  .soft--medium {
    padding: 1.25rem !important;
  }
  .soft--left--medium {
    padding-left: 1.25rem !important;
  }
  .soft--right--medium {
    padding-right: 1.25rem !important;
  }
  .soft--top--medium {
    padding-top: 1.25rem !important;
  }
  .soft--bottom--medium {
    padding-bottom: 1.25rem !important;
  }
  .push--medium {
    margin: 1.25rem !important;
  }
  .push--bottom--medium {
    margin-bottom: 1.25rem !important;
  }
  .hard--medium {
    padding: 0 !important;
  }
  .flush--medium {
    margin: 0 !important;
  }
  .flush--bottom--medium {
    margin-bottom: 0 !important;
  }
  .soft-double--medium {
    padding: 2.5rem !important;
  }
  .soft-double--left--medium {
    padding-left: 2.5rem !important;
  }
  .soft-double--right--medium {
    padding-right: 2.5rem !important;
  }
  .soft-double--top--medium {
    padding-top: 2.5rem !important;
  }
  .soft-double--bottom--medium {
    padding-bottom: 2.5rem !important;
  }
  .push-double--medium {
    margin: 2.5rem !important;
  }
  .push-double--bottom--medium {
    margin-bottom: 2.5rem !important;
  }
  .hard-double--medium {
    padding: 0 !important;
  }
  .flush-double--medium {
    margin: 0 !important;
  }
  .flush-double--bottom--medium {
    margin-bottom: 0 !important;
  }
  .soft-quin--medium {
    padding: 6.25rem !important;
  }
  .soft-quin--left--medium {
    padding-left: 6.25rem !important;
  }
  .soft-quin--right--medium {
    padding-right: 6.25rem !important;
  }
  .soft-quin--top--medium {
    padding-top: 6.25rem !important;
  }
  .soft-quin--bottom--medium {
    padding-bottom: 6.25rem !important;
  }
  .push-quin--medium {
    margin: 6.25rem !important;
  }
  .push-quin--bottom--medium {
    margin-bottom: 6.25rem !important;
  }
  .hard-quin--medium {
    padding: 0 !important;
  }
  .flush-quin--medium {
    margin: 0 !important;
  }
  .flush-quin--bottom--medium {
    margin-bottom: 0 !important;
  }
}

.swatch {
  display: block;
  height: 100px;
  width: 100px;
}

a,
.link {
  text-decoration: none;
  cursor: pointer;
  color: inherit;
}

a.hover, a:hover,
.link.hover,
.link:hover {
  opacity: 0.7;
}

.link--primary {
  color: #06D6B3;
  font-weight: 700;
  text-decoration: none;
}

p > a,
.link--secondary {
  text-decoration: underline;
}

.link--small {
  font-size: 0.875rem;
}

.link--with-icon {
  position: relative;
}

.link--with-icon .link__text {
  padding-left: 1.25rem;
  background: #fff;
}

.link--with-icon .link__icon {
  top: 50%;
  bottom: auto;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  position: absolute;
  left: 0;
  display: block;
  max-width: 0.625rem;
  z-index: 2;
}

.link--with-icon--on-right .link__icon {
  margin-right: 0;
  margin-left: 0.625rem;
}

.button {
  background: none;
  border: none;
  box-shadow: none;
  text-decoration: none;
  display: inline-block;
  text-align: center;
  line-height: 1;
  cursor: pointer;
  -webkit-appearance: none;
  transition: all 400ms cubic-bezier(0.75, 0.01, 0.07, 0.99);
  vertical-align: middle;
  padding: 1.25rem 2.5rem;
  border-radius: 3px;
  width: 100%;
  margin-bottom: 0.625rem;
  position: relative;
  color: #fff;
  background: #06D6B3;
  box-shadow: 0px 5px 7px 0px rgba(0, 0, 0, 0.12);
  color: #fff;
  letter-spacing: 0.125rem;
  text-transform: uppercase;
  font-weight: 700;
}

.button + .button {
  margin-left: 0.625rem;
}

@media screen and (min-width: 40em) {
  .button {
    width: auto;
  }
}

.button.hover, .button:hover {
  opacity: 0.7;
}

.button.active, .button:active {
  opacity: 0.3;
}

.button.disabled, .button:disabled {
  opacity: 0.4;
  box-shadow: 0 0 0;
}

.button.button--secondary {
  background: #341717;
}

.button.button--expand {
  display: block;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.button.button--square {
  width: 3.5rem;
  padding-left: 0;
  padding-right: 0;
}

.button.button--circle {
  width: 5rem;
  height: 5rem;
  padding-left: 0;
  padding-right: 0;
}

.button .button__icon {
  left: 50%;
  top: 50%;
  bottom: auto;
  right: auto;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  fill: #fff;
  position: absolute;
  max-width: 100%;
}

.progress {
  width: 100%;
  padding: 0 0.625rem;
  display: block;
  height: 0.625rem;
  position: relative;
}

.progress__bar {
  height: 0.625rem;
  background: linear-gradient(40deg, #359BE5 0%, #fff 100%);
  transition: all 400ms cubic-bezier(0.75, 0.01, 0.07, 0.99);
  box-shadow: -2px -2px 8px rgba(219, 219, 219, 0.4) inset;
}

.progress--full .progress__bar {
  background: linear-gradient(40deg, #3BADFF 0%, #3BADFF 100%);
  box-shadow: 0 0 0;
}

.progress__text {
  left: 50%;
  top: 50%;
  bottom: auto;
  right: auto;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  position: absolute;
  color: #359BE5;
  font-size: 0.75rem;
  z-index: 1;
  bottom: 100%;
  top: auto;
}

.progress--danger .progress__bar {
  background: linear-gradient(40deg, #FF6F6F 0%, #FF6F6F 100%);
  box-shadow: 0 0 0;
}

.progress--danger .progress__text {
  color: #EE5E5E;
}

progress {
  display: none;
}

.ff-radio {
  text-align: center;
  margin: 0;
  padding: 0;
  border: 0;
  display: inline-block;
  position: relative;
  max-width: 8.75rem;
}

.ff-radio input {
  position: absolute;
  display: block;
  width: 100%;
  height: 100%;
  opacity: 0;
  cursor: pointer;
}

.ff-radio label {
  display: block;
  padding-top: 100%;
  width: 100%;
  height: 100%;
  cursor: pointer;
  line-height: 2.5rem;
}

.ff-radio label:before {
  position: absolute;
  top: 0%;
  left: 50%;
  display: block;
  width: 100%;
  height: calc(100% - 2.5rem);
  content: '';
  opacity: 0.2;
  -webkit-transform: translate(-50%, 0%);
          transform: translate(-50%, 0%);
  border-radius: 50%;
  box-shadow: 0 0 2px #F4F4F4;
  pointer-events: none;
}

.ff-radio svg {
  position: absolute;
  top: calc(50% - 1.25rem);
  left: 50%;
  display: block;
  height: calc(100% - 5rem);
  width: calc(100% - 2.5rem);
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  content: '';
  pointer-events: none;
}

.ff-radio label:hover:before + label, .ff-radio label:hover:before + label:before,
.ff-radio input[type="radio"]:focus + label,
.ff-radio input[type="radio"]:focus + label:before,
.ff-radio input[type="radio"]:checked + label,
.ff-radio input[type="radio"]:checked + label:before {
  opacity: 1;
}

input,
textarea {
  -webkit-appearance: none;
  border: 1px solid #F4F4F4;
  display: block;
  width: 100%;
  outline: none;
  color: #736E6E;
  padding: 1.25rem 1.25rem;
  box-shadow: 0 0 2px #F4F4F4;
}

input:focus,
textarea:focus {
  outline: none;
}

input:focus ~ label,
textarea:focus ~ label {
  color: #06D6B3;
}

.input {
  text-align: left;
  display: block;
  width: 100%;
  position: relative;
  margin: auto;
  background: #fff;
}

.input .input__intro {
  position: absolute;
  padding: 0.3125rem 0.625rem;
  margin: 0;
  width: 100%;
  background: #fff;
  bottom: 100%;
}

.input > input,
.input > textarea {
  border: 0;
  box-shadow: none;
}

.input .input__hint {
  padding: 0.625rem 0;
}

.input--float-label > label {
  -webkit-transform: translate(0px, 0.8333333333rem);
          transform: translate(0px, 0.8333333333rem);
  text-overflow: clip;
  cursor: text;
  pointer-events: none;
}

.input--float-label > input,
.input--float-label > textarea {
  outline: none;
}

.input--float-label > input:focus,
.input--float-label > textarea:focus {
  outline: none;
}

.input--float-label > input:focus ~ label,
.input--float-label > textarea:focus ~ label {
  -webkit-transform: translate(0px, 0);
          transform: translate(0px, 0);
  text-overflow: ellipsis;
}

.input--float-label > input:not(:focus).is-not-empty ~ label, .input--float-label > input:not(:focus)[value]:not([value=""]):not(.is-empty):not(.is-not-empty) ~ label, .input--float-label > input:not(:focus):not(:empty):not(.is-empty):not(.is-not-empty) ~ label,
.input--float-label > textarea:not(:focus).is-not-empty ~ label,
.input--float-label > textarea:not(:focus)[value]:not([value=""]):not(.is-empty):not(.is-not-empty) ~ label,
.input--float-label > textarea:not(:focus):not(:empty):not(.is-empty):not(.is-not-empty) ~ label {
  -webkit-transform: translate(0px, 0);
          transform: translate(0px, 0);
  text-overflow: ellipsis;
}

/*
* Validation
*/
.input > input:invalid:not(:focus):not(:required), .input > input:invalid:not(:focus):required.mui--is-not-empty, .input > input:invalid:not(:focus):required.mui--is-empty.mui--is-dirty, .input > input:invalid:not(:focus):required[value]:not([value=""]):not(.mui--is-empty):not(.mui--is-not-empty), .input > input:invalid:not(:focus):required:not(:empty):not(.mui--is-empty):not(.mui--is-not-empty),
.input > textarea:invalid:not(:focus):not(:required),
.input > textarea:invalid:not(:focus):required.mui--is-not-empty,
.input > textarea:invalid:not(:focus):required.mui--is-empty.mui--is-dirty,
.input > textarea:invalid:not(:focus):required[value]:not([value=""]):not(.mui--is-empty):not(.mui--is-not-empty),
.input > textarea:invalid:not(:focus):required:not(:empty):not(.mui--is-empty):not(.mui--is-not-empty),
.input > input:not(:focus).mui--is-invalid:not(:required),
.input > input:not(:focus).mui--is-invalid:required.mui--is-not-empty,
.input > input:not(:focus).mui--is-invalid:required.mui--is-empty.mui--is-dirty,
.input > input:not(:focus).mui--is-invalid:required[value]:not([value=""]):not(.mui--is-empty):not(.mui--is-not-empty),
.input > input:not(:focus).mui--is-invalid:required:not(:empty):not(.mui--is-empty):not(.mui--is-not-empty),
.input > textarea:not(:focus).mui--is-invalid:not(:required),
.input > textarea:not(:focus).mui--is-invalid:required.mui--is-not-empty,
.input > textarea:not(:focus).mui--is-invalid:required.mui--is-empty.mui--is-dirty,
.input > textarea:not(:focus).mui--is-invalid:required[value]:not([value=""]):not(.mui--is-empty):not(.mui--is-not-empty),
.input > textarea:not(:focus).mui--is-invalid:required:not(:empty):not(.mui--is-empty):not(.mui--is-not-empty) {
  border-width: 2px;
}

.input > input:invalid:not(:focus):not(:required), .input > input:invalid:not(:focus):required.mui--is-not-empty, .input > input:invalid:not(:focus):required.mui--is-empty.mui--is-dirty, .input > input:invalid:not(:focus):required[value]:not([value=""]):not(.mui--is-empty):not(.mui--is-not-empty), .input > input:invalid:not(:focus):required:not(:empty):not(.mui--is-empty):not(.mui--is-not-empty),
.input > input:not(:focus).mui--is-invalid:not(:required),
.input > input:not(:focus).mui--is-invalid:required.mui--is-not-empty,
.input > input:not(:focus).mui--is-invalid:required.mui--is-empty.mui--is-dirty,
.input > input:not(:focus).mui--is-invalid:required[value]:not([value=""]):not(.mui--is-empty):not(.mui--is-not-empty),
.input > input:not(:focus).mui--is-invalid:required:not(:empty):not(.mui--is-empty):not(.mui--is-not-empty) {
  height: 2.5625rem;
  margin-bottom: -1px;
}

.nav,
.nav ul {
  margin: 0 0 1.25rem;
  padding: 0;
  list-style-type: none;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}

.nav li {
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  padding-left: 1.25rem;
}

.nav li:first-child {
  padding-left: 0;
}

.nav li a {
  display: block;
}

.nav.nav--small li {
  font-size: 0.875rem;
}

.nav.nav--expanded li {
  -webkit-flex: 1 1 0px;
      -ms-flex: 1 1 0px;
          flex: 1 1 0px;
}

.nav.nav--horizonal {
  -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
}

.nav.nav--horizonal li {
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
}

.nav.nav--vertical, .nav.nav--vertical ul {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.nav.nav--vertical ul {
  margin: 0.625rem 0 1.25rem 1.25rem;
}

.nav.nav--vertical li {
  padding-left: 0;
  -webkit-flex: 0 0 100%;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  max-width: 100%;
}

.nav.nav--vertical li a {
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
              -ms-grid-row-align: flex-start;
          align-items: flex-start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
}

.nav.nav--align-right {
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.nav.nav--align-center {
  text-align: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.pagination {
  font-family: "Merriweather", serif;
  color: #9D9D9D;
}

.pagination .pagination__number {
  font-family: "Karla", sans-serif;
  font-weight: 700;
}

.icon {
  display: inline-block;
  position: relative;
  fill: #736E6E;
  transition: fill 400ms cubic-bezier(0.75, 0.01, 0.07, 0.99);
}

.icon--large.icon--large {
  max-height: 5rem;
  max-width: 5rem;
}

.icon--large.icon--large.fluid--width {
  max-width: 100%;
}

.icon--medium.icon--medium {
  max-height: 3.75rem;
  max-width: 3.75rem;
}

.icon--medium.icon--medium.fluid--width {
  max-width: 100%;
}

.icon--small.icon--small {
  max-height: 2.5rem;
  max-width: 2.5rem;
}

.icon--small.icon--small.fluid--width {
  max-width: 100%;
}

.icon--tiny.icon--tiny {
  max-height: 1.6875rem;
  max-width: 1.6875rem;
}

.icon--tiny.icon--tiny.fluid--width {
  max-width: 100%;
}

.icon--milli.icon--milli {
  max-height: 0.625rem;
  max-width: 0.625rem;
}

.icon--milli.icon--milli.fluid--width {
  max-width: 100%;
}

@media screen and (min-width: 40em) {
  .icon--large.icon--large {
    max-height: 5rem;
    max-width: 5rem;
  }
  .icon--large.icon--large.fluid--width {
    max-width: 100%;
  }
  .icon--medium.icon--medium {
    max-height: 5rem;
    max-width: 5rem;
  }
  .icon--medium.icon--medium.fluid--width {
    max-width: 100%;
  }
  .icon--small.icon--small {
    max-height: 3.75rem;
    max-width: 3.75rem;
  }
  .icon--small.icon--small.fluid--width {
    max-width: 100%;
  }
  .icon--tiny.icon--tiny {
    max-height: 1.6875rem;
    max-width: 1.6875rem;
  }
  .icon--tiny.icon--tiny.fluid--width {
    max-width: 100%;
  }
}

.notification {
  text-align: center;
  top: 0;
  left: 0;
  right: 0;
  width: auto;
  padding: 1.25rem;
  position: absolute;
  color: #736E6E;
  background: #fff;
  z-index: 1000;
}

.notification--success {
  color: #06D6B3;
  background: #EEFCFA;
}

.notification--error {
  color: #FF6F6F;
  background: #FCF4F4;
}

.header {
  border-bottom: 1px solid #F4F4F4;
  background: #fff;
  height: 3.75rem;
  text-align: left;
  overflow: hidden;
}

@media screen and (min-width: 40em) {
  .header {
    text-align: center;
  }
}

.header__text,
.header__icon {
  display: inline-block;
  height: 3.75rem;
  line-height: 3.75rem;
  position: relative;
  vertical-align: top;
}

.header__text svg,
.header__icon svg {
  left: 50%;
  top: 50%;
  bottom: auto;
  right: auto;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  position: absolute;
}

.header__icon {
  width: 3.75rem;
}

.header__icon svg {
  fill: #9D9D9D;
  left: 50%;
  top: 50%;
  bottom: auto;
  right: auto;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  position: absolute;
}

.header__icon:hover {
  fill: #9D9D9D;
}

.header__text {
  text-transform: capitalize;
  padding: 0 0 0 0.625rem;
  color: #9D9D9D;
}

.header__text i {
  text-transform: lowercase;
  font-style: normal;
}

.panel {
  border: 1px solid #F4F4F4;
  padding: 2.5rem;
}

.divider {
  position: relative;
  display: block;
}

.divider:before {
  top: 50%;
  bottom: auto;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  content: '';
  height: 0;
  border-top: 1px solid #F4F4F4;
  right: 0;
  left: 0;
  position: absolute;
}

.divider.divider--center {
  text-align: center;
}

.divider__icon,
.divider__text {
  background: #fff;
  position: relative;
  z-index: 1;
  display: inline-block;
}

.divider--boxed-text .divider__icon, .divider--boxed-text
.divider__text {
  padding: 0.625rem 1.25rem;
  border: 1px solid #F4F4F4;
}

.divider--center .divider__icon, .divider--center
.divider__text {
  margin: auto;
}

@media screen and (min-width: 40em) {
  .divider__icon,
  .divider__text {
    padding: 0.625rem;
  }
}

.divider__icon {
  max-width: 2.5rem;
}

.alert {
  text-align: left;
  width: auto;
  padding: 0 0.625rem;
  color: #EE5E5E;
  background: #fff;
  border: 2px solid #EE5E5E;
  border-radius: 3px;
  z-index: 1000;
  line-height: 2;
  font-weight: 700;
  font-size: 0.75rem;
}

body {
  font-family: "Karla", sans-serif;
}

p {
  margin: 0 0 1.25rem;
}

h1, .alpha {
  font-size: 1.375rem;
}

h2, .beta {
  font-size: 1.25rem;
}

h3, .gamma {
  font-size: 1.125rem;
}

h4, .delta {
  font-size: 1rem;
}

h5, .epsilon {
  font-size: 0.875rem;
}

h6, .zeta {
  font-size: 0.75rem;
}

@media screen and (min-width: 40em) {
  h1, .alpha {
    font-size: 2rem;
  }
  h2, .beta {
    font-size: 1.875rem;
  }
  h3, .gamma {
    font-size: 1.125rem;
  }
  h4, .delta {
    font-size: 1rem;
  }
  h5, .epsilon {
    font-size: 0.875rem;
  }
  h6, .zeta {
    font-size: 0.875rem;
  }
}

h1, .alpha,
h2,
.beta,
h3,
.gamma,
h4,
.delta,
h5,
.epsilon,
h6,
.zeta {
  line-height: 1.65;
  font-weight: 400;
  margin: 0 0 1.25rem;
  padding: 0;
}

h1, .alpha {
  font-family: "Karla", sans-serif;
}

h2, .beta {
  font-family: "Merriweather", serif;
  color: #736E6E;
}

h3, .gamma {
  font-family: "Merriweather", serif;
  color: #341717;
  font-weight: 700;
}

h4, .delta {
  font-family: "Karla", sans-serif;
  color: #341717;
  font-weight: 700;
}

h5, .epsilon {
  font-family: "Karla", sans-serif;
  font-weight: 700;
  letter-spacing: 0.0625rem;
  text-transform: uppercase;
}

h6, .zeta {
  font-family: "Karla", sans-serif;
  font-weight: 700;
}

.p--, .p-- p {
  font-size: 0.875rem;
}

.p--medium, .p--medium p {
  font-size: 0.875rem;
}

.p--small, .p--small p {
  font-size: 0.75rem;
}

.p--large, input,
textarea, .p--large p, input p,
textarea p {
  font-size: 0.875rem;
}

.p--xlarge, .p--xlarge p {
  font-size: 1.125rem;
}

@media screen and (min-width: 40em) {
  .p--, .p-- p {
    font-size: 1rem;
  }
  .p--medium, .p--medium p {
    font-size: 1.125rem;
  }
  .p--small, .p--small p {
    font-size: 0.75rem;
  }
  .p--large, input,
  textarea, .p--large p, input p,
  textarea p {
    font-size: 1rem;
  }
  .p--xlarge, .p--xlarge p {
    font-size: 1.125rem;
  }
}

p {
  font-family: "Karla", sans-serif;
  color: #736E6E;
  line-height: 1.65;
}

p em {
  font-family: "Merriweather", serif;
  font-size: 85%;
}

.p--xlarge {
  color: #341717;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

@media screen and (min-width: 40em) {
  .text-left--medium {
    text-align: left;
  }
  .text-right--medium {
    text-align: right;
  }
  .text-center--medium {
    text-align: center;
  }
  .text-justify--medium {
    text-align: justify;
  }
}

@media screen and (min-width: 64em) {
  .text-left--large {
    text-align: left;
  }
  .text-right--large {
    text-align: right;
  }
  .text-center--large {
    text-align: center;
  }
  .text-justify--large {
    text-align: justify;
  }
}

.emphasis {
  font-style: italic;
}

.strong {
  font-weight: 700;
}

.ellipsis {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.contribution-create {
  padding-bottom: 12.5rem;
}

.contribution-create__fields {
  position: relative;
  z-index: 1;
}

.contribution-create__header {
  z-index: 1;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background: #fff;
  z-index: 2;
}

.contribution-create__footer {
  left: 50%;
  right: auto;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  background: #fff;
  position: fixed;
  bottom: 0;
  height: 5rem;
  width: 100%;
  max-width: 43.75rem;
  box-shadow: 0 0 2px #F4F4F4;
  border-radius: 3px;
  border: 1px solid #F4F4F4;
  z-index: 3;
}

.contribution-create__counter {
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
}

.contribution-create__pagination,
.contribution-create__controls {
  position: absolute;
  right: 1.25rem;
  top: 50%;
  bottom: auto;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.contribution-create__pagination {
  right: auto;
  left: 1.25rem;
}

.page {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

pre {
  white-space: pre;
  overflow: scroll;
}

.kss-nav__ref {
  float: right;
}

.kss-title__ref:before {
  content: 'Section ';
}

.kss-parameters {
  display: table;
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
}

.kss-parameters__item {
  display: table-row;
}

.kss-parameters__name {
  display: table-cell;
  padding-right: 20px;
}

.kss-parameters__description {
  display: table-cell;
}

.kss-modifier__heading {
  margin: -10px -10px 10px -10px;
  padding: 10px;
  border-bottom: 1px solid #ccc;
  background-color: #eee;
  font-weight: bold;
}

.kss-modifier__default-name {
  font-weight: bold;
  margin-bottom: 0.625rem;
}

.kss-modifier__name {
  float: left;
  padding-right: 10px;
  font-weight: bold;
}

.kss-modifier__description {
  margin-bottom: 0.625rem;
}

.kss-modifier__example {
  clear: left;
  padding: 1px 0;
  position: relative;
  margin: 0 0 1.25rem 0;
}

.kss-modifier__example:last-child {
  margin: 0;
}

.kss-markup {
  margin: -1px 0 2.5rem 0;
  border: 1px solid #F4F4F4;
}

.kss-markup pre {
  margin: 0;
}

.kss-github {
  display: none;
}

@media screen and (min-width: 501px) {
  .kss-github {
    display: block;
    position: absolute;
    top: 0;
    right: 0;
  }
}

.kss-github img {
  border: 0;
}

/* SPAN elements with the classes below are added by prettyprint. */
.pln {
  color: #000;
}

/* plain text */
.str {
  color: #080;
}

/* string content */
.kwd {
  color: #008;
}

/* a keyword */
.com {
  color: #800;
}

/* a comment */
.typ {
  color: #606;
}

/* a type name */
.lit {
  color: #066;
}

/* a literal value */
/* punctuation, lisp open bracket, lisp close bracket */
.pun, .opn, .clo {
  color: #660;
}

.tag {
  color: #008;
}

/* a markup tag name */
.atn {
  color: #606;
}

/* a markup attribute name */
.atv {
  color: #080;
}

/* a markup attribute value */
.dec, .var {
  color: #606;
}

/* a declaration; a variable name */
.fun {
  color: red;
}

/* a function name */
/* Specify class=linenums on a pre to get line numbering */
ol.linenums {
  margin: 0;
  padding: 0 0 3px 0;
  list-style-type: none;
  /* Alternate shading for lines */
}

ol.linenums li {
  min-height: 24px;
  border-bottom: 1px solid #eee;
  padding: 0 10px;
  background: #fff;
}

ol.linenums li:first-child {
  padding-top: 3px;
}

ol.linenums li.L0,
ol.linenums li.L2,
ol.linenums li.L4,
ol.linenums li.L6,
ol.linenums li.L8 {
  background: #fcfcfc;
}

/*# sourceMappingURL=data:application/json;base64, */
