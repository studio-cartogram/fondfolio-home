/* =========================================
Links/Anchor Component
========================================= */

a,
.link {
  display: inline-block;
  outline: none;
  color: inherit;
  text-decoration: inherit;
  color: $ca-anchor-color;
  font-weight: $t-font-weight-bold;
  transition: all $a-timing $a-easing;
  position: relative;

  &:hover,
  &:focus,
  // .current-menu-item &,
  &.is-active {
    color: $ca-anchor-hover-color;
  }

  // .current-menu-item &,
  &.is-active {
    &:focus,
    &:hover {
      color: $ca-anchor-color;
    }
  }
}

.link--secondary {
  font-weight: $t-font-weight-regular;
  color: $ca-anchor-color;

  &:before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    width: auto;
    height: 1px;
    background-color: $ca-anchor-hover-color;
    transform: scale(0);
    opacity: 0;
    transition: all $a-timing $a-easing;
  }

  &:hover,
  &:focus,
  // .current-menu-item &,
  &.is-active {
    color: $ca-anchor-color;

    &:before {
      background-color: $ca-anchor-color;
      transform: scale(1);
      opacity: 1;
    }
  }

  // .current-menu-item &,
  &.is-active {
    &:focus,
    &:hover {
      color: $ca-anchor-hover-color;
      &:before {
        background-color: $ca-anchor-hover-color;
      }
    }
  }
}


.links--secondary a {
  @extend .link--secondary;
}

.link--with-email {
  position: relative;
  display: block;
  &:after {
    transition: all $a-timing/2 $a-easing;
    content: attr(data-email);
    z-index: 1;
    background: $ca-site-background;
    position: absolute;
    bottom:0;
    left: 0;
    opacity: 0;
    animation-duration: $a-timing;
    animation-timing-function: $a-easing;
    animation-name: slideOff;
  }

  &:focus:after,
  &:hover:after {
    color: $ca-anchor-color !important;
    opacity: 1;
    animation-name: slideDown;
  }
}

@keyframes slideDown {
  from {
    transform: translate3d(0, -30%, 0);
  }
  to {
    transform: translate3d(0, 0%, 0);
  }
}

@keyframes slideOff {
  from {
    transform: translate3d(0, -0%, 0);
  }
  to {
    transform: translate3d(0, 30%, 0);
  }
}
